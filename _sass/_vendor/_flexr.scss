/*! Flexr Grid - 3.0.0-alpha.1
Copyright 2016-2018 Daniel Blake. All rights reserved. flexrgrid.com */



// Vars and Mixins

@mixin break($a, $b) {
   @media (max-width:#{$a}) and (orientation:#{$b}) {
      @content;
   }
}

$gutter: (
   d: 30px,
   tp: 24px,
   p: 18px
);

@function col($arg) {
   @return 8.33333% * $arg;
}

@function gutter($arg:d) {
   @return map-get($gutter,$arg);
}

@mixin tabletLan {
   @include break(1282px, landscape) {
      @content;
   };
}

@mixin tabletPor {
   @include break(1032px, portrait) {
      @content;
   };
}

@mixin phoneLan {
   @include break(862px, landscape) {
      @content;
   };
}

@mixin phonePor {
   @include break(482px, portrait) {
      @content;
   };
}




// Flexr

.row {
   display: -ms-flexbox;
   display: -webkit-flex;
   display: flex;
   width: 1222px;
   margin: 0 auto;
   -webkit-justify-content: center;
   justify-content: center;
   -webkit-flex-wrap: wrap;
   flex-wrap: wrap
}

[class*=col-] {
   padding: gutter() / 2;
   -moz-box-sizing: border-box;
   -webkit-box-sizing: border-box;
   box-sizing: border-box
}

@for $i from 1 through 12 {
   .col-#{$i} {
      width: col($i);
   }
}

.left {
   -webkit-justify-content: flex-start;
   justify-content: flex-start
}

.right {
   -webkit-justify-content: flex-end;
   justify-content: flex-end
}

.col-x {
   width: auto
}

.stretch {
   width: 100%;

   [class*=col-] {
      padding: 0
   }
}


//   Smaller Desktop Screens & Tablet Landscape

@include tabletLan {

   .row {

      &:not(.stretch), &:not(.fill) {
         width: calc(100% - #{gutter()})
      }

      @for $i from 1 through 12 {
         .tl-col-#{$i} {
            width: col($i);
         }
      }
   }

};


//    Tablet Portait

@include tabletPor {

   [class*=col-] {
      padding: gutter(tp) / 2
   }

   .row {

      &:not(.stretch) {
         width: calc(100% - #{gutter(tp)})
      }

      @for $i from 1 through 12 {
         .tp-col-#{$i} {
            width: col($i)
         }
      }
   }

   .expand {

      @for $i from 1 through 3 {
         $j: $i * 2;

         .col-#{$i} {
            width: col($j);
         }
      }
   }

};


//    Phone Landscape

@include phoneLan {

   [class*=col-] {
      padding: gutter(p) / 2
   }

   .row {

      &:not(.stretch) {
         width: calc(100% - #{gutter(p)})
      }

      @for $i from 1 through 12 {
         .pl-col-#{$i} {
            width: col($i);
         }
      }
   }

};


//    Phone Portrait

@include phonePor {

   [class*=col-]:not(.col-x), .expand [class*=col-]:not(.col-x) {
      width: 100%
   }

   .row.expand .col-1 {
      width: 50%
   }

   .row {

      @for $i from 1 through 12 {
         .pp-col-#{$i} {
            width: col($i);
         }
      }
   }

};

/* Flexr Grid end */

/*! Flexr Grid - Sass Preview
Copyright 2016-2017 Flexr. All rights reserved. More info at flexrgrid.com */

// Mixins for Flexr Sass (Ignore)

$base: 8.3333%;

@mixin break($var) {
   @media only screen and ( max-width : $var ) {
      @content;
   }
};

// Mixins for User

@mixin tabletLan {
   @include break(1180px) {
      @content;
   };
}

@mixin tabletPor {
   @include break(940px) {
      @content;
   };
}

@mixin phoneLan {
   @include break(740px) {
      @content;
   };
}

@mixin phonePor {
   @include break(520px) {
      @content;
   };
}


// Flexr

.row, [class*=col-] {
   height: auto;
   position: relative
}

.row {
   display: -ms-flexbox;
   display: -webkit-flex;
   display: flex;
   width: 1152px;
   margin: 0 auto;
   -ms-flex-pack: center;
   -webkit-justify-content: center;
   justify-content: center;
   -ms-flex-wrap: wrap;
   -webkit-flex-wrap: wrap;
   flex-wrap: wrap
}

.jus-l {
   -ms-flex-pack: start;
   -webkit-justify-content: flex-start;
   justify-content: flex-start
}

.jus-r {
   -ms-flex-pack: end;
   -webkit-justify-content: flex-end;
   justify-content: flex-end
}

[class*=col-] {
   padding: 15px;
   -moz-box-sizing: border-box;
   -webkit-box-sizing: border-box;
   box-sizing: border-box
}

@for $i from 1 through 12 {
   .col-#{$i} {
      width: $base * $i;
   }
}

.col-x {
   width: auto
}

.stretch, .fill {
   width: 100%;

   [class*=col-] {
      padding: 0
   }
}


//   Smaller Desktop Screens & Tablet Landscape

@include tabletLan {

   .row {

      &:not(.stretch):not(.fill) {
         width: calc(100% - 30px)
      }

      @for $i from 1 through 12 {
         .tl-col-#{$i} {
            width: $base * $i;
         }
      }
   }

};


//    Tablet Portait

@include tabletPor {

   [class*=col-] {
      padding: 12px
   }

   .row {

      &:not(.stretch):not(.fill) {
         width: calc(100% - 24px)
      }

      @for $i from 1 through 12 {
         .tp-col-#{$i} {
            width: $base * $i;
         }
      }
   }

   .expand, .exp {

      @for $i from 1 through 4 {
         $j: $i * 2;

         .col-#{$i} {
            width: $base * $j;
         }
      }
   }

};


//    Phone Landscape

@include phoneLan {

   [class*=col-] {
      padding: 9px
   }

   .row {

      &:not(.stretch):not(.fill) {
         width: calc(100% - 18px)
      }

      @for $i from 1 through 12 {
         .pl-col-#{$i} {
            width: $base * $i;
         }
      }
   }

};


//    Phone Portrait

@include phonePor {

   [class*=col-]:not(.col-x), .expand [class*=col-]:not(.col-x), .exp [class*=col-]:not(.col-x) {
      width: 100%
   }

   .row.expand .col-1, .row.exp .col-1 {
      width: 50%
   }

   .row {

      @for $i from 1 through 12 {
         .pp-col-#{$i} {
            width: $base * $i;
         }
      }
   }

};
